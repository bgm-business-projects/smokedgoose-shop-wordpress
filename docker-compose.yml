version: '3.8'

services:

  app:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80' # Public HTTP Port
      - '81:81' # Admin Web Port


    volumes:
      - ./nginx-proxy_data:/data
      - ./letsencrypt:/etc/letsencrypt

  wordpress:
    image: wordpress
    container_name: wordpress
    ports:
      - 8080:80
    volumes:
      - ./wordpress_data:/var/www/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini

    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb

    depends_on:
      - db
      - phpmyadmin
    restart: always

  coder:
    container_name: coder
    image: codercom/code-server
    restart: unless-stopped
    environment:
      PASSWORD: Aa3345678
      TZ: Asia/Taipei
    ports:
      - "9001:8080"
    volumes:
      - ./wordpress_data/:/home/coder/project
  
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Aa3345678
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
    volumes:
      - ./db_data:/var/lib/mysql

  phpmyadmin:
    depends_on:
      - db                # 確保 mysql 容器先啟動
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8280:80"  # 對外開放的 phpMyAdmin 管理界面
    environment:
      PMA_HOST: db        # 指定要連接的 MySQL 容器名稱
      PMA_PORT: 3306         # MySQL 服務的連接埠
      MYSQL_ROOT_PASSWORD: Aa3345678 # MySQL root 密碼

  redis:     #redis服务/其他服务（web服务/nginx服务等）
      image: redis:7                            #redis镜像，如果镜像容器没有会去自动拉取
      container_name: redis                     #设置容器名称
      command: redis-server --appendonly yes --requirepass '123456'    #开启持久化的支持并设置认证密码
      restart: always                           #跟随docker的启动而启动
      volumes:
        - ./redis_data:/data  